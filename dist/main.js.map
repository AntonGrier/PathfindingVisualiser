{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/Pathfinder.tsx","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/App.tsx","webpack:///./src/Cell.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","MouseState","NodeType","STARTPOS","x","Math","floor","GRIDW","y","GRIDH","FINISHPOS","Pathfinder","Component","props","super","this","state","grid","mouseState","isMouseDown","row","curRow","col","newNode","nodeType","Empty","push","startNode","Start","finishNode","Finish","setState","PlacingWall","eventType","nextNodeType","MovingStart","MovingFinish","Wall","className","map","rowIdx","cell","colIdx","updateMouseState","ReactDOM","render","document","getElementById","App","Cell","event","type","extraClassName","onMouseDown","handleMouseEvent","onMouseUp","onMouseLeave","onMouseEnter"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = React;","import {Component} from \"react\";\r\nimport * as React from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\nconst GRIDW = 40;\r\nconst GRIDH = 21;\r\n\r\nexport const STARTPOS = {x: Math.floor(GRIDW/4), y: Math.floor(GRIDH/2)};\r\nexport const FINISHPOS = {x: GRIDW - STARTPOS.x, y: STARTPOS.y};\r\n\r\nexport enum MouseState {\r\n    PlacingWall,\r\n    MovingStart,\r\n    MovingFinish,\r\n}\r\n\r\nexport enum NodeType {\r\n    Empty,\r\n    Wall,\r\n    Start,\r\n    Finish,\r\n}\r\n\r\nexport interface Node {\r\n    x: number;\r\n    y: number;\r\n    nodeType: NodeType;\r\n}\r\n\r\nexport default class Pathfinder extends Component<{}, {grid: Array<Array<Node>>, mouseState: MouseState, isMouseDown: boolean}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            grid: [],\r\n            mouseState: null,\r\n            isMouseDown: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        let grid: Array<Array<Node>> = [];\r\n        for (let row = 0; row < GRIDH; row++) {\r\n            let curRow: Array<Node> = [];\r\n            for (let col = 0; col < GRIDW; col++) {\r\n                let newNode: Node = {x: col, y: row, nodeType: NodeType.Empty};\r\n                curRow.push(newNode);\r\n            }\r\n            grid.push(curRow);\r\n        }\r\n        let startNode: Node = {x: STARTPOS.x, y: STARTPOS.y, nodeType: NodeType.Start};\r\n        let finishNode: Node = {x: FINISHPOS.x, y: FINISHPOS.y, nodeType: NodeType.Finish};\r\n        grid[STARTPOS.y][STARTPOS.x]   = startNode;\r\n        grid[FINISHPOS.y][FINISHPOS.x] = finishNode;\r\n        this.setState({grid: grid, mouseState: MouseState.PlacingWall, isMouseDown: false});\r\n    }\r\n\r\n    updateMouseState(x: number, y: number, eventType: string): void {\r\n        let {grid, mouseState, isMouseDown} = this.state;\r\n        let nodeType: NodeType = grid[y][x].nodeType;\r\n        let nextNodeType: NodeType;\r\n        switch (eventType) {\r\n            case \"mousedown\": {\r\n                if ((mouseState == MouseState.MovingStart && nodeType == NodeType.Finish) || (mouseState == MouseState.MovingFinish && nodeType == NodeType.Start)) {\r\n                    return;\r\n                }\r\n                mouseState = nodeType == NodeType.Start ? MouseState.MovingStart : nodeType == NodeType.Finish ? MouseState.MovingFinish : MouseState.PlacingWall;\r\n\r\n                switch (nodeType) {\r\n                    case NodeType.Empty:\r\n                        nextNodeType = NodeType.Wall;\r\n                        break;\r\n                    case NodeType.Wall:\r\n                        nextNodeType = NodeType.Empty;\r\n                        break;\r\n                    case NodeType.Start:\r\n                    case NodeType.Finish:\r\n                        nextNodeType = nodeType;\r\n                }\r\n                isMouseDown = true;\r\n                grid[y][x].nodeType = nextNodeType;\r\n                break;\r\n            }\r\n            case \"mouseup\": {\r\n                if ((mouseState == MouseState.MovingStart && nodeType == NodeType.Finish) || (mouseState == MouseState.MovingFinish && nodeType == NodeType.Start)) {\r\n                    return;\r\n                } else {\r\n                    mouseState = MouseState.PlacingWall;\r\n                    isMouseDown = false;\r\n                }\r\n                break;\r\n            }\r\n            case \"mouseenter\": {\r\n                if (!isMouseDown) return;\r\n                if (nodeType == NodeType.Start || nodeType == NodeType.Finish) {\r\n                    return;\r\n                } else {\r\n                    switch (mouseState) {\r\n                        case MouseState.MovingStart:\r\n                            nextNodeType = NodeType.Start;\r\n                            break;\r\n                        case MouseState.MovingFinish:\r\n                            nextNodeType = NodeType.Finish;\r\n                            break;\r\n                        case MouseState.PlacingWall:\r\n                            nextNodeType = nodeType == NodeType.Empty ? NodeType.Wall : NodeType.Empty;\r\n                            break;\r\n                    }\r\n                }\r\n                grid[y][x].nodeType = nextNodeType;\r\n                break;\r\n            }\r\n            case \"mouseleave\": {\r\n                if (!isMouseDown) return;\r\n                if (mouseState == MouseState.MovingStart  && nodeType == NodeType.Finish) return;\r\n                if (mouseState == MouseState.MovingFinish && nodeType == NodeType.Start) return;\r\n                switch (mouseState) {\r\n                    case MouseState.MovingStart:\r\n                    case MouseState.MovingFinish:\r\n                        nextNodeType = NodeType.Empty;\r\n                        break;\r\n                    case MouseState.PlacingWall:\r\n                        nextNodeType = nodeType;\r\n                        break;\r\n                }\r\n                grid[y][x].nodeType = nextNodeType;\r\n                break;\r\n            }\r\n        }\r\n        this.setState({grid: grid, mouseState: mouseState, isMouseDown: isMouseDown});\r\n    }\r\n\r\n    render(): any {\r\n        let grid = this.state.grid;\r\n        return (\r\n        <div className = \"grid\">\r\n            {grid.map((row: Array<Node>, rowIdx) => {\r\n                return (<div className=\"grid-row\" key = {rowIdx}>\r\n                    {row.map((cell: Node, colIdx) => {\r\n                        return (<Cell\r\n                            x = {colIdx}\r\n                            y = {rowIdx}\r\n                            nodeType = {cell.nodeType}\r\n                            updateMouseState = {(x: number, y: number, eventType: string) => this.updateMouseState(x, y, eventType)}\r\n                            key = {colIdx}/>)\r\n                    })}\r\n                </div>)\r\n            })}\r\n        </div>)\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById(\"root\")\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\nimport Pathfinder from \"../Pathfinder\";\r\nimport {Component} from \"react\";\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(): any {\r\n        return (<div className=\"app\">\r\n            <Pathfinder/>\r\n        </div>);\r\n    }\r\n}","import * as React from \"react\";\r\nimport {Component} from \"react\";\r\nimport {FINISHPOS, MouseState, NodeType, STARTPOS} from \"./Pathfinder\";\r\nimport {render} from \"react-dom\";\r\n\r\nexport default class Cell extends Component<\r\n    {\r\n        x: number,\r\n        y: number,\r\n        nodeType: NodeType,\r\n        updateMouseState: (x: number, y: number, eventType: string) => void\r\n    },\r\n    {}>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleMouseEvent(event: React.MouseEvent<HTMLElement>): void {\r\n        let eventType: string =  event.type;\r\n        this.props.updateMouseState(this.props.x, this.props.y, eventType);\r\n    }\r\n\r\n    render(): any {\r\n        let nodeType = this.props.nodeType;\r\n        let extraClassName: string;\r\n        switch (nodeType) {\r\n            case NodeType.Empty:    extraClassName = \"\"; break;\r\n            case NodeType.Start:    extraClassName = \"cell-start\"; break;\r\n            case NodeType.Finish:   extraClassName = \"cell-finish\"; break;\r\n            case NodeType.Wall:     extraClassName = \"cell-wall\"; break;\r\n        }\r\n        return (\r\n            <div className={`cell ${extraClassName}`}\r\n                 onMouseDown    =   {(event) => this.handleMouseEvent(event)}\r\n                 onMouseUp      =   {(event) => this.handleMouseEvent(event)}\r\n                 onMouseLeave   =   {(event) => this.handleMouseEvent(event)}\r\n                 onMouseEnter   =   {(event) => this.handleMouseEvent(event)}\r\n            />\r\n        )\r\n    }\r\n}"],"sourceRoot":""}